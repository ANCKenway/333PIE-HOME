<!DOCTYPE html><!DOCTYPE html><!DOCTYPE html>

<html lang="fr">

<head><html lang="fr"><html lang="fr">

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0"><head><head>

    <title>333HOME - Domotique Pro</title>

    <link rel="icon" href="/favicon.svg" type="image/svg+xml">    <meta charset="UTF-8">    <meta charset="UTF-8">

    

    <!-- Tailwind CSS CDN -->    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <script src="https://cdn.tailwindcss.com"></script>

        <title>333HOME - Gestion Domotique</title>    <title>333HOME - Gestion de Parc Informatique</title>

    <!-- Alpine.js CDN -->

    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>        <link rel="icon" href="/favicon.svg" type="image/svg+xml">

    

    <style>    <!-- Tailwind CSS -->    <link rel="stylesheet" href="/static/css/main.css">

        [x-cloak] { display: none !important; }

        @keyframes fadeIn {    <script src="https://cdn.tailwindcss.com"></script>    <script src="/app-simple.js" defer></script>

            from { opacity: 0; transform: translateY(10px); }

            to { opacity: 1; transform: translateY(0); }    </head>

        }

        .fade-in { animation: fadeIn 0.3s ease-out; }    <!-- Alpine.js --><body>

    </style>

</head>    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>    <div class="app-layout">



<body class="bg-gradient-to-br from-purple-600 via-pink-500 to-red-500 min-h-screen antialiased"             <!-- Menu mobile hamburger -->

      x-data="homeApp()" 

      x-init="init()">    <style>        <button class="mobile-menu-btn" id="mobile-menu-btn">



    <div class="flex min-h-screen">        [x-cloak] { display: none !important; }            <span class="hamburger-line"></span>

        

        <!-- ============= SIDEBAR ============= -->    </style>            <span class="hamburger-line"></span>

        <aside class="w-80 bg-gray-900/95 backdrop-blur-2xl text-white shadow-2xl border-r border-white/10 flex flex-col">

            </head>            <span class="hamburger-line"></span>

            <!-- Header -->

            <div class="p-8 border-b border-white/10"><body class="bg-gradient-to-br from-indigo-500 via-purple-500 to-pink-500 min-h-screen" x-data="app()" x-init="init()">        </button>

                <h1 class="text-3xl font-black bg-gradient-to-r from-purple-400 via-pink-400 to-red-400 bg-clip-text text-transparent mb-2">

                    üè† 333HOME    

                </h1>

                <p class="text-sm text-gray-400">v6.0 Alpine + Tailwind</p>    <!-- Layout Principal -->        <!-- Overlay mobile -->

            </div>

                <div class="flex min-h-screen">        <div class="mobile-overlay" id="mobile-overlay"></div>

            <!-- Navigation -->

            <nav class="flex-1 p-4 space-y-2">        

                <template x-for="tab in tabs" :key="tab.id">

                    <button         <!-- Sidebar -->        <!-- Sidebar -->

                        @click="currentTab = tab.id"

                        :class="currentTab === tab.id ?         <aside class="w-72 bg-gray-900/95 backdrop-blur-xl text-white shadow-2xl border-r border-white/10">        <aside class="sidebar" id="sidebar">

                            'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-xl scale-105' : 

                            'text-gray-400 hover:text-white hover:bg-white/10'"            <div class="p-6 border-b border-white/10">            <div class="sidebar-header">

                        class="w-full flex items-center gap-4 px-6 py-4 rounded-2xl transition-all duration-300 font-semibold text-left"

                    >                <h1 class="text-2xl font-bold bg-gradient-to-r from-indigo-400 to-pink-400 bg-clip-text text-transparent">                <h1>üè† 333HOME</h1>

                        <span x-text="tab.icon" class="text-3xl"></span>

                        <span x-text="tab.name" class="text-lg"></span>                    üè† 333HOME                <div class="status-indicator" id="status-indicator">‚ö° En ligne</div>

                    </button>

                </template>                </h1>            </div>

            </nav>

                            <p class="text-sm text-gray-400 mt-1">v6.0 - Alpine + Tailwind</p>            

            <!-- Footer -->

            <div class="p-4 border-t border-white/10 text-center text-sm text-gray-500">            </div>            <nav class="sidebar-nav">

                <p>Raspberry Pi 5 ‚Ä¢ FastAPI</p>

            </div>                            <button class="nav-btn active" data-tab="status">

        </aside>

                    <nav class="p-4 space-y-2">                    <span class="nav-icon">üìä</span>

        <!-- ============= MAIN CONTENT ============= -->

        <main class="flex-1 overflow-y-auto">                <template x-for="tab in tabs" :key="tab.id">                    <span class="nav-text">Statut</span>

            <div class="max-w-7xl mx-auto p-8">

                                    <button                 </button>

                <!-- ========== TAB: STATUS ========== -->

                <div x-show="currentTab === 'status'" x-cloak class="fade-in space-y-8">                        @click="switchTab(tab.id)"                <button class="nav-btn" data-tab="devices">

                    

                    <!-- Header -->                        :class="currentTab === tab.id ? 'bg-gradient-to-r from-indigo-500 to-purple-500 text-white shadow-lg' : 'text-gray-400 hover:text-white hover:bg-white/5'"                    <span class="nav-icon">üì±</span>

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">

                        <h2 class="text-4xl font-black text-gray-800 mb-3 flex items-center gap-3">                        class="w-full flex items-center gap-3 px-4 py-3 rounded-xl transition-all duration-300 font-medium"                    <span class="nav-text">Appareils</span>

                            üìä Statut Syst√®me

                        </h2>                    >                </button>

                        <p class="text-gray-600 text-lg">Monitoring temps r√©el de votre infrastructure</p>

                    </div>                        <span x-text="tab.icon" class="text-2xl"></span>                <button class="nav-btn" data-tab="network">

                    

                    <!-- Stats Cards -->                        <span x-text="tab.name"></span>                    <span class="nav-icon">üåê</span>

                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

                                            </button>                    <span class="nav-text">Scan R√©seau</span>

                        <div class="bg-gradient-to-br from-purple-500 to-purple-700 rounded-3xl p-8 text-white shadow-2xl hover:scale-105 transition-transform duration-300">

                            <div class="text-6xl mb-4">üì±</div>                </template>                </button>

                            <div class="text-5xl font-black mb-2" x-text="stats.total || '0'"></div>

                            <div class="text-purple-200 uppercase tracking-widest text-sm font-semibold">Total Devices</div>            </nav>                <button class="nav-btn" data-tab="vpn">

                        </div>

                                </aside>                    <span class="nav-icon">üîí</span>

                        <div class="bg-gradient-to-br from-green-500 to-emerald-700 rounded-3xl p-8 text-white shadow-2xl hover:scale-105 transition-transform duration-300">

                            <div class="text-6xl mb-4">‚úÖ</div>                            <span class="nav-text">VPN Tailscale</span>

                            <div class="text-5xl font-black mb-2" x-text="stats.online || '0'"></div>

                            <div class="text-green-200 uppercase tracking-widest text-sm font-semibold">En Ligne</div>        <!-- Main Content -->                </button>

                        </div>

                                <main class="flex-1 p-8 overflow-y-auto">                <button class="nav-btn" data-tab="test">

                        <div class="bg-gradient-to-br from-red-500 to-pink-700 rounded-3xl p-8 text-white shadow-2xl hover:scale-105 transition-transform duration-300">

                            <div class="text-6xl mb-4">‚ùå</div>            <div class="max-w-7xl mx-auto">                    <span class="nav-icon">üîß</span>

                            <div class="text-5xl font-black mb-2" x-text="stats.offline || '0'"></div>

                            <div class="text-red-200 uppercase tracking-widest text-sm font-semibold">Hors Ligne</div>                                    <span class="nav-text">Test API</span>

                        </div>

                                        <!-- TAB: Status -->                </button>

                        <div class="bg-gradient-to-br from-blue-500 to-cyan-700 rounded-3xl p-8 text-white shadow-2xl hover:scale-105 transition-transform duration-300">

                            <div class="text-6xl mb-4">üéØ</div>                <div x-show="currentTab === 'status'" x-cloak class="space-y-6">            </nav>

                            <div class="text-5xl font-black mb-2" x-text="stats.managed || '0'"></div>

                            <div class="text-blue-200 uppercase tracking-widest text-sm font-semibold">G√©r√©s</div>                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">        </aside>

                        </div>

                                                <h2 class="text-3xl font-bold text-gray-800 mb-2">üìä Statut du Syst√®me</h2>

                    </div>

                                            <p class="text-gray-600">Monitoring en temps r√©el de votre infrastructure</p>        <!-- Contenu principal -->

                    <!-- System Health -->

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">                    </div>        <main class="main-content">

                        <h3 class="text-2xl font-bold text-gray-800 mb-6">üè† √âtat Serveur</h3>

                        <div class="space-y-4">                                <!-- Tab Statut -->

                            <div class="flex justify-between items-center bg-gray-50 rounded-2xl p-6">

                                <span class="text-gray-700 font-semibold text-lg">Serveur 333HOME</span>                    <!-- Stats Cards -->            <div id="tab-status" class="tab-content active">

                                <span class="px-6 py-3 bg-green-500 text-white rounded-full font-bold shadow-lg" 

                                      x-text="health.status === 'healthy' ? '‚úÖ Healthy' : '‚è≥ Loading'"></span>                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">                <div class="page-header">

                            </div>

                            <div class="flex justify-between items-center bg-gray-50 rounded-2xl p-6">                        <div class="bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-transform duration-300">                    <h2>üìä Statut du Syst√®me</h2>

                                <span class="text-gray-700 font-semibold text-lg">Base de Donn√©es</span>

                                <span class="px-6 py-3 bg-green-500 text-white rounded-full font-bold shadow-lg">‚úÖ Op√©rationnel</span>                            <div class="text-5xl mb-2">üì±</div>                    <p>Monitoring temps r√©el de votre infrastructure</p>

                            </div>

                        </div>                            <div class="text-4xl font-bold" x-text="stats.total || 0"></div>                </div>

                    </div>

                                                <div class="text-indigo-100 text-sm uppercase tracking-wider mt-1">Total Appareils</div>                

                </div>

                                        </div>                <!-- Stats principales -->

                <!-- ========== TAB: DEVICES ========== -->

                <div x-show="currentTab === 'devices'" x-cloak class="fade-in space-y-8">                                        <div class="stats-grid">

                    

                    <!-- Header -->                        <div class="bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-transform duration-300">                    <div class="stat-card stat-card--primary">

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">

                        <div class="flex justify-between items-center">                            <div class="text-5xl mb-2">‚úÖ</div>                        <div class="stat-icon">üì±</div>

                            <div>

                                <h2 class="text-4xl font-black text-gray-800 mb-3 flex items-center gap-3">                            <div class="text-4xl font-bold" x-text="stats.online || 0"></div>                        <div class="stat-content">

                                    üì± Appareils G√©r√©s

                                </h2>                            <div class="text-green-100 text-sm uppercase tracking-wider mt-1">En Ligne</div>                            <div class="stat-value" id="stat-total-devices">-</div>

                                <p class="text-gray-600 text-lg">G√©rez vos appareils connect√©s</p>

                            </div>                        </div>                            <div class="stat-label">Appareils Total</div>

                            <button 

                                @click="loadDevices()"                                                </div>

                                class="px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-2xl font-bold shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 text-lg"

                            >                        <div class="bg-gradient-to-br from-red-500 to-pink-600 rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-transform duration-300">                    </div>

                                üîÑ Actualiser

                            </button>                            <div class="text-5xl mb-2">‚ùå</div>                    

                        </div>

                    </div>                            <div class="text-4xl font-bold" x-text="stats.offline || 0"></div>                    <div class="stat-card stat-card--success">

                    

                    <!-- Loading State -->                            <div class="text-red-100 text-sm uppercase tracking-wider mt-1">Hors Ligne</div>                        <div class="stat-icon">‚úÖ</div>

                    <div x-show="loading" class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-16 text-center border border-white/20">

                        <div class="text-7xl mb-6 animate-spin">üîÑ</div>                        </div>                        <div class="stat-content">

                        <p class="text-2xl font-bold text-gray-800">Chargement...</p>

                    </div>                                                    <div class="stat-value" id="stat-online-devices">-</div>

                    

                    <!-- Empty State -->                        <div class="bg-gradient-to-br from-blue-500 to-cyan-600 rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-transform duration-300">                            <div class="stat-label">En ligne</div>

                    <div x-show="!loading && devices.length === 0" class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-16 text-center border border-white/20">

                        <div class="text-8xl mb-6">üîç</div>                            <div class="text-5xl mb-2">üéØ</div>                        </div>

                        <h3 class="text-3xl font-black text-gray-800 mb-4">Aucun appareil</h3>

                        <p class="text-gray-600 text-lg mb-8">Lancez un scan r√©seau pour d√©couvrir des appareils</p>                            <div class="text-4xl font-bold" x-text="stats.managed || 0"></div>                    </div>

                        <button 

                            @click="currentTab = 'network'"                            <div class="text-blue-100 text-sm uppercase tracking-wider mt-1">G√©r√©s</div>                    

                            class="px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-2xl font-bold shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 text-lg"

                        >                        </div>                    <div class="stat-card stat-card--warning">

                            üåê Scanner le R√©seau

                        </button>                    </div>                        <div class="stat-icon">‚ùå</div>

                    </div>

                                                                <div class="stat-content">

                    <!-- Devices Grid -->

                    <div x-show="!loading && devices.length > 0" class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">                    <!-- System Health -->                            <div class="stat-value" id="stat-offline-devices">-</div>

                        <template x-for="device in devices" :key="device.ip">

                            <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-xl p-8 border border-white/20 hover:shadow-2xl hover:scale-102 transition-all duration-300">                    <div class="bg-white/95 backdrop-blur-xl rounded-2xl shadow-xl p-6 border border-white/20">                            <div class="stat-label">Hors ligne</div>

                                

                                <!-- Device Header -->                        <h3 class="text-xl font-bold text-gray-800 mb-4">üè† √âtat du Syst√®me</h3>                        </div>

                                <div class="flex justify-between items-start mb-6">

                                    <div class="flex-1">                        <div class="space-y-3">                    </div>

                                        <h3 class="text-2xl font-bold text-gray-800 mb-1" 

                                            x-text="device.name || device.hostname || device.ip"></h3>                            <div class="flex justify-between items-center p-4 bg-gray-50 rounded-xl">                    

                                        <p class="text-gray-500 font-mono text-sm" x-text="device.ip"></p>

                                    </div>                                <span class="text-gray-700 font-medium">Serveur 333HOME</span>                    <div class="stat-card stat-card--info">

                                    <span 

                                        :class="device.status === 'online' ?                                 <span class="px-4 py-2 bg-green-100 text-green-700 rounded-full font-semibold" x-text="health.status || 'Chargement...'"></span>                        <div class="stat-icon">üéØ</div>

                                            'bg-green-500 text-white' : 

                                            'bg-red-500 text-white'"                            </div>                        <div class="stat-content">

                                        class="px-4 py-2 rounded-full text-sm font-bold shadow-lg"

                                        x-text="device.status === 'online' ? '‚úÖ Online' : '‚ùå Offline'"                            <div class="flex justify-between items-center p-4 bg-gray-50 rounded-xl">                            <div class="stat-value" id="stat-managed-devices">-</div>

                                    ></span>

                                </div>                                <span class="text-gray-700 font-medium">Base de Donn√©es</span>                            <div class="stat-label">G√©r√©s</div>

                                

                                <!-- Device Info -->                                <span class="px-4 py-2 bg-green-100 text-green-700 rounded-full font-semibold">Op√©rationnel</span>                        </div>

                                <div class="space-y-3 mb-6">

                                    <div x-show="device.mac" class="flex justify-between text-sm bg-gray-50 rounded-xl p-3">                            </div>                    </div>

                                        <span class="text-gray-600 font-semibold">MAC:</span>

                                        <span class="text-gray-800 font-mono" x-text="device.mac"></span>                        </div>                </div>

                                    </div>

                                    <div x-show="device.manufacturer" class="flex justify-between text-sm bg-gray-50 rounded-xl p-3">                    </div>                

                                        <span class="text-gray-600 font-semibold">Fabricant:</span>

                                        <span class="text-gray-800" x-text="device.manufacturer"></span>                </div>                <!-- Informations syst√®me -->

                                    </div>

                                </div>                                <div class="status-cards">

                                

                                <!-- Actions -->                <!-- TAB: Devices -->                    <div class="card">

                                <div class="flex gap-3">

                                    <button                 <div x-show="currentTab === 'devices'" x-cloak class="space-y-6">                        <h3>üè† Serveur 333HOME</h3>

                                        x-show="device.managed"

                                        @click="removeDevice(device.ip)"                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">                        <div id="app-status">

                                        class="flex-1 px-4 py-3 bg-red-500 text-white rounded-xl font-bold hover:bg-red-600 transition-colors shadow-lg"

                                    >                        <div class="flex justify-between items-center">                            <div class="status-item">

                                        üóëÔ∏è Retirer

                                    </button>                            <div>                                <span class="status-label">√âtat:</span>

                                    <button 

                                        x-show="!device.managed"                                <h2 class="text-3xl font-bold text-gray-800 mb-2">üì± Appareils G√©r√©s</h2>                                <span class="status-value" id="app-health-status">Chargement...</span>

                                        @click="addDevice(device.ip)"

                                        class="flex-1 px-4 py-3 bg-purple-500 text-white rounded-xl font-bold hover:bg-purple-600 transition-colors shadow-lg"                                <p class="text-gray-600">G√©rez vos appareils connect√©s</p>                            </div>

                                    >

                                        ‚ûï G√©rer                            </div>                        </div>

                                    </button>

                                </div>                            <button                     </div>

                                

                            </div>                                @click="loadDevices()"                    

                        </template>

                    </div>                                class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"                    <div class="card">

                    

                </div>                            >                        <h3>üì° Base de Donn√©es</h3>

                

                <!-- ========== TAB: NETWORK ========== -->                                üîÑ Actualiser                        <div id="db-status">

                <div x-show="currentTab === 'network'" x-cloak class="fade-in space-y-8">

                                                </button>                            <div class="status-item">

                    <!-- Header -->

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">                        </div>                                <span class="status-label">Fichier:</span>

                        <div class="flex justify-between items-center">

                            <div>                    </div>                                <span class="status-value">devices_unified.json</span>

                                <h2 class="text-4xl font-black text-gray-800 mb-3 flex items-center gap-3">

                                    üåê Scan R√©seau                                                </div>

                                </h2>

                                <p class="text-gray-600 text-lg">D√©couverte automatique des appareils</p>                    <!-- Devices Grid -->                            <div class="status-item">

                            </div>

                            <button                     <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">                                <span class="status-label">√âtat:</span>

                                @click="startScan()"

                                :disabled="scanning"                        <template x-for="device in devices" :key="device.ip">                                <span class="status-value" id="db-health-status">Chargement...</span>

                                :class="scanning ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'"

                                class="px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-2xl font-bold shadow-xl hover:shadow-2xl transition-all duration-300 text-lg"                            <div class="bg-white/95 backdrop-blur-xl rounded-2xl shadow-xl p-6 border border-white/20 transform hover:scale-102 transition-all duration-300">                            </div>

                            >

                                <span x-show="!scanning">üîç Lancer Scan</span>                                <div class="flex justify-between items-start mb-4">                        </div>

                                <span x-show="scanning">‚è≥ Scan...</span>

                            </button>                                    <div>                    </div>

                        </div>

                    </div>                                        <h3 class="text-xl font-bold text-gray-800" x-text="device.name || device.hostname || device.ip"></h3>                </div>

                    

                    <!-- Scanning State -->                                        <p class="text-gray-500 text-sm" x-text="device.ip"></p>            </div>

                    <div x-show="scanning" class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-16 text-center border border-white/20">

                        <div class="text-8xl mb-6 animate-spin">üîÑ</div>                                    </div>

                        <p class="text-3xl font-black text-gray-800 mb-3">Scan en cours...</p>

                        <p class="text-gray-600 text-lg">Recherche d'appareils sur le r√©seau local</p>                                    <span             <!-- Tab Appareils -->

                    </div>

                                                            :class="device.status === 'online' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'"            <div id="tab-devices" class="tab-content">

                    <!-- Info -->

                    <div x-show="!scanning" class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">                                        class="px-3 py-1 rounded-full text-sm font-semibold"                <div class="page-header">

                        <h3 class="text-2xl font-bold text-gray-800 mb-4">‚ÑπÔ∏è Comment √ßa marche ?</h3>

                        <ul class="space-y-3 text-gray-700">                                        x-text="device.status === 'online' ? '‚úÖ En ligne' : '‚ùå Hors ligne'"                    <h2>üì± Appareils G√©r√©s</h2>

                            <li class="flex items-start gap-3">

                                <span class="text-2xl">üîç</span>                                    ></span>                    <p>Appareils ajout√©s √† votre parc informatique avec fonctionnalit√©s avanc√©es</p>

                                <span>Scanne votre r√©seau local pour d√©tecter tous les appareils connect√©s</span>

                            </li>                                </div>                </div>

                            <li class="flex items-start gap-3">

                                <span class="text-2xl">üì±</span>                                                

                                <span>Identifie automatiquement les appareils (IP, MAC, Fabricant)</span>

                            </li>                                <div class="space-y-2 mb-4">                <div class="devices-actions">

                            <li class="flex items-start gap-3">

                                <span class="text-2xl">‚ö°</span>                                    <div class="flex justify-between text-sm" x-show="device.mac">                    <button class="btn btn-primary" id="refresh-devices">üîÑ Actualiser</button>

                                <span>Ajoutez les appareils √† votre gestion depuis l'onglet Appareils</span>

                            </li>                                        <span class="text-gray-600">MAC:</span>                    <button class="btn btn-success" id="add-device">‚ûï Ajouter Appareil</button>

                        </ul>

                    </div>                                        <span class="text-gray-800 font-mono" x-text="device.mac"></span>                    <!-- Bouton Sync VPN supprim√© - sync automatique maintenant -->

                    

                </div>                                    </div>                </div>

                

                <!-- ========== TAB: VPN ========== -->                                    <div class="flex justify-between text-sm" x-show="device.manufacturer">                

                <div x-show="currentTab === 'vpn'" x-cloak class="fade-in space-y-8">

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">                                        <span class="text-gray-600">Fabricant:</span>                <div class="devices-container">

                        <h2 class="text-4xl font-black text-gray-800 mb-3 flex items-center gap-3">

                            üîí VPN Tailscale                                        <span class="text-gray-800" x-text="device.manufacturer"></span>                    <div id="devices-list">

                        </h2>

                        <p class="text-gray-600 text-lg">Gestion de votre r√©seau priv√© virtuel</p>                                    </div>                        <div class="card">

                    </div>

                </div>                                </div>                            <p class="empty-state">üîç Aucun appareil g√©r√©. Utilisez le scan r√©seau pour d√©couvrir et ajouter des appareils.</p>

                

                <!-- ========== TAB: TEST ========== -->                                                        </div>

                <div x-show="currentTab === 'test'" x-cloak class="fade-in space-y-8">

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 border border-white/20">                                <div class="flex gap-2">                    </div>

                        <h2 class="text-4xl font-black text-gray-800 mb-3 flex items-center gap-3">

                            üîß Test API                                    <button                 </div>

                        </h2>

                        <p class="text-gray-600 text-lg">Testez les endpoints de l'API backend</p>                                        x-show="device.managed"            </div>

                    </div>

                </div>                                        @click="removeDevice(device.ip)"

                

            </div>                                        class="flex-1 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors duration-200"            <!-- Tab Scan R√©seau -->

        </main>

    </div>                                    >            <div id="tab-network" class="tab-content">

    

    <script>                                        üóëÔ∏è Retirer                <div class="page-header">

        function homeApp() {

            return {                                    </button>                    <h2>üåê Scan R√©seau</h2>

                // State

                currentTab: 'status',                                    <button                     <p>D√©couverte automatique des appareils sur votre r√©seau local</p>

                loading: false,

                scanning: false,                                        x-show="!device.managed"                </div>

                

                tabs: [                                        @click="addDevice(device.ip)"                

                    { id: 'status', name: 'Statut', icon: 'üìä' },

                    { id: 'devices', name: 'Appareils', icon: 'üì±' },                                        class="flex-1 px-4 py-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition-colors duration-200"                <!-- Informations dernier scan -->

                    { id: 'network', name: 'Scan R√©seau', icon: 'üåê' },

                    { id: 'vpn', name: 'VPN', icon: 'üîí' },                                    >                <div class="scan-info-section">

                    { id: 'test', name: 'Test API', icon: 'üîß' }

                ],                                        ‚ûï G√©rer                    <div class="card">

                

                stats: { total: 0, online: 0, offline: 0, managed: 0 },                                    </button>                        <h3>üìä Informations de Scan</h3>

                health: { status: 'loading' },

                devices: [],                                </div>                        <div id="scan-info-content">

                

                // Init                            </div>                            <div class="loading">üîÑ Chargement des informations...</div>

                async init() {

                    console.log('üöÄ 333HOME v6.0 Alpine+Tailwind');                        </template>                        </div>

                    await this.loadStats();

                    await this.loadHealth();                    </div>                    </div>

                    await this.loadDevices();

                },                                    </div>

                

                // API: Load Stats                    <div x-show="devices.length === 0" class="bg-white/95 backdrop-blur-xl rounded-2xl shadow-xl p-12 text-center border border-white/20">                

                async loadStats() {

                    try {                        <div class="text-6xl mb-4">üîç</div>                <div class="network-controls">

                        const res = await fetch('/api/hub/stats');

                        const data = await res.json();                        <h3 class="text-2xl font-bold text-gray-800 mb-2">Aucun appareil</h3>                    <button class="btn btn-primary" id="start-scan">üîç Lancer Scan</button>

                        this.stats = data.devices || this.stats;

                        console.log('‚úÖ Stats:', this.stats);                        <p class="text-gray-600 mb-6">Lancez un scan r√©seau pour d√©couvrir des appareils</p>                    <button class="btn btn-secondary" id="stop-scan" disabled>‚èπÔ∏è Arr√™ter</button>

                    } catch (err) {

                        console.error('‚ùå Stats error:', err);                        <button                     <button class="btn btn-outline" id="show-history" onclick="app.toggleNetworkHistory()">üìã Historique R√©seau</button>

                    }

                },                            @click="switchTab('network')"                    <div class="scan-progress" id="scan-progress" style="display: none;">

                

                // API: Load Health                            class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"                        <div class="progress-bar">

                async loadHealth() {

                    try {                        >                            <div class="progress-fill" id="progress-fill"></div>

                        const res = await fetch('/api/hub/health');

                        const data = await res.json();                            üåê Scanner le R√©seau                        </div>

                        this.health = data;

                        console.log('‚úÖ Health:', data);                        </button>                        <span id="scan-status">Scan en cours...</span>

                    } catch (err) {

                        console.error('‚ùå Health error:', err);                    </div>                    </div>

                    }

                },                </div>                </div>

                

                // API: Load Devices                                

                async loadDevices() {

                    this.loading = true;                <!-- TAB: Network -->                <!-- Section Historique R√©seau -->

                    try {

                        const res = await fetch('/api/hub/devices');                <div x-show="currentTab === 'network'" x-cloak class="space-y-6">                <div class="network-history-section" id="network-history-section" style="display: none;">

                        const data = await res.json();

                        this.devices = data.devices || [];                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">                    <div class="card">

                        console.log('‚úÖ Devices:', this.devices.length);

                    } catch (err) {                        <div class="flex justify-between items-center">                        <h3>üìã Historique des Appareils R√©seau</h3>

                        console.error('‚ùå Devices error:', err);

                        this.devices = [];                            <div>                        <div class="history-tabs">

                    } finally {

                        this.loading = false;                                <h2 class="text-3xl font-bold text-gray-800 mb-2">üåê Scan R√©seau</h2>                            <button class="tab-btn active" onclick="app.showHistoryTab('devices')">üñ•Ô∏è Appareils</button>

                    }

                },                                <p class="text-gray-600">D√©couverte automatique des appareils</p>                            <button class="tab-btn" onclick="app.showHistoryTab('events')">üìÖ √âv√©nements</button>

                

                // API: Add Device                            </div>                        </div>

                async addDevice(ip) {

                    try {                            <button                         

                        await fetch('/api/devices', {

                            method: 'POST',                                @click="startScan()"                        <div id="history-devices" class="history-tab-content active">

                            headers: { 'Content-Type': 'application/json' },

                            body: JSON.stringify({ ip, managed: true })                                :disabled="scanning"                            <div class="loading">üîÑ Chargement de l'historique...</div>

                        });

                        await this.loadDevices();                                :class="scanning ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'"                        </div>

                        console.log('‚úÖ Device added:', ip);

                    } catch (err) {                                class="px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transform transition-all duration-300"                        

                        alert('Erreur: ' + err.message);

                    }                            >                        <div id="history-events" class="history-tab-content" style="display: none;">

                },

                                                <span x-show="!scanning">üîç Lancer Scan</span>                            <div class="loading">üîÑ Chargement des √©v√©nements...</div>

                // API: Remove Device

                async removeDevice(ip) {                                <span x-show="scanning">‚è≥ Scan en cours...</span>                        </div>

                    if (!confirm(`Retirer ${ip} de la gestion ?`)) return;

                    try {                            </button>                    </div>

                        await fetch(`/api/devices/${ip}`, { method: 'DELETE' });

                        await this.loadDevices();                        </div>                </div>

                        console.log('‚úÖ Device removed:', ip);

                    } catch (err) {                    </div>                

                        alert('Erreur: ' + err.message);

                    }                                    <!-- Appareils r√©cemment d√©connect√©s -->

                },

                                    <div x-show="scanning" class="bg-white/95 backdrop-blur-xl rounded-2xl shadow-xl p-8 text-center border border-white/20">                <div class="disconnected-section" id="disconnected-section" style="display: none;">

                // API: Start Network Scan

                async startScan() {                        <div class="animate-spin text-6xl mb-4">üîÑ</div>                    <div class="card">

                    this.scanning = true;

                    try {                        <p class="text-xl font-semibold text-gray-800">Scan du r√©seau en cours...</p>                        <h3>üìµ Appareils R√©cemment D√©connect√©s</h3>

                        await fetch('/api/hub/scan', { method: 'POST' });

                        console.log('‚úÖ Scan lanc√©');                        <p class="text-gray-600 mt-2">Cela peut prendre quelques instants</p>                        <div id="disconnected-devices">

                        

                        // Wait 5 seconds then reload                    </div>                            <div class="loading">üîÑ Chargement...</div>

                        await new Promise(resolve => setTimeout(resolve, 5000));

                                        </div>                        </div>

                        await this.loadDevices();

                        await this.loadStats();                                    </div>

                        

                        // Switch to devices tab                <!-- TAB: VPN -->                </div>

                        this.currentTab = 'devices';

                    } catch (err) {                <div x-show="currentTab === 'vpn'" x-cloak class="space-y-6">                

                        alert('Erreur scan: ' + err.message);

                    } finally {                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">                <div class="network-results">

                        this.scanning = false;

                    }                        <h2 class="text-3xl font-bold text-gray-800 mb-2">üîí VPN Tailscale</h2>                    <div id="network-devices">

                }

            }                        <p class="text-gray-600">Gestion de votre r√©seau VPN</p>                        <div class="card">

        }

    </script>                    </div>                            <p class="empty-state">üéØ Cliquez sur "Lancer Scan" pour d√©couvrir les appareils r√©seau</p>

    

</body>                </div>                        </div>

</html>

                                    </div>

                <!-- TAB: Test -->                </div>

                <div x-show="currentTab === 'test'" x-cloak class="space-y-6">            </div>

                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-8 border border-white/20">

                        <h2 class="text-3xl font-bold text-gray-800 mb-2">üîß Test API</h2>            <!-- Tab VPN Tailscale -->

                        <p class="text-gray-600">Testez les endpoints de l'API</p>            <!-- Tab VPN Unified - Interface coh√©rente avec les autres onglets -->

                    </div>            <div id="tab-vpn" class="tab-content">

                </div>                <div class="page-header">

                                    <h2>üîí VPN Tailscale</h2>

            </div>                    <p>Gestion et monitoring de votre r√©seau Tailscale</p>

        </main>                </div>

    </div>                

                    <div class="devices-actions">

    <script>                    <button class="btn btn-primary" id="refresh-tailscale">üîÑ Actualiser</button>

        function app() {                    <button class="btn btn-secondary" id="tailscale-settings">‚öôÔ∏è Configuration</button>

            return {                </div>

                currentTab: 'status',

                tabs: [                <!-- Configuration API (masqu√©e par d√©faut) -->

                    { id: 'status', name: 'Statut', icon: 'üìä' },                <div class="card" id="vpn-config-section" style="display: none;">

                    { id: 'devices', name: 'Appareils', icon: 'üì±' },                    <h3>‚öôÔ∏è Configuration API</h3>

                    { id: 'network', name: 'Scan R√©seau', icon: 'üåê' },                    <form id="tailscale-config-form">

                    { id: 'vpn', name: 'VPN', icon: 'üîí' },                        <div class="form-group">

                    { id: 'test', name: 'Test API', icon: 'üîß' }                            <label>ÔøΩ Cl√© API Tailscale</label>

                ],                            <input type="password" id="tailscale-api-key" class="form-control" 

                stats: {},                                   placeholder="tskey-api-...">

                health: {},                            <small>Obtenez votre cl√© sur https://login.tailscale.com/admin/settings/keys</small>

                devices: [],                        </div>

                scanning: false,                        <div class="form-group">

                                            <label>üè¢ Tailnet (Organisation)</label>

                async init() {                            <input type="text" id="tailscale-tailnet" class="form-control" 

                    console.log('üöÄ 333HOME v6.0 - Alpine + Tailwind');                                   placeholder="tail12345.ts.net ou votre@email.com">

                    await this.loadStats();                            <small>Format: tail&lt;hash&gt;.ts.net (visible dans Admin ‚Üí Settings) ou votre email pour compte personnel</small>

                    await this.loadHealth();                        </div>

                    await this.loadDevices();                        <button type="submit" class="btn btn-primary">üíæ Sauvegarder</button>

                },                    </form>

                                </div>

                switchTab(tab) {

                    this.currentTab = tab;                <!-- Statistiques - utilise les m√™mes classes que l'onglet Status -->

                    console.log('üîÑ Tab:', tab);                <div class="status-grid">

                                        <div class="card">

                    // Load content on tab switch                        <h3 id="total-devices">-</h3>

                    if (tab === 'devices') this.loadDevices();                        <p>Appareils Total</p>

                },                    </div>

                                    <div class="card online">

                async loadStats() {                        <h3 id="online-devices">-</h3>

                    try {                        <p>En Ligne</p>

                        const res = await fetch('/api/hub/stats');                    </div>

                        const data = await res.json();                    <div class="card offline">

                        this.stats = data.devices || {};                        <h3 id="offline-devices">-</h3>

                    } catch (err) {                        <p>Hors Ligne</p>

                        console.error('‚ùå Stats:', err);                    </div>

                    }                    <div class="card">

                },                        <h3 id="last-sync">-</h3>

                                        <p>Derni√®re Synch</p>

                async loadHealth() {                    </div>

                    try {                </div>

                        const res = await fetch('/api/hub/health');                

                        const data = await res.json();                <!-- Liste des appareils - utilise les m√™mes classes que l'onglet Devices -->

                        this.health = data;                <div class="devices-container">

                    } catch (err) {                    <div class="card">

                        console.error('‚ùå Health:', err);                        <h3>üåê Appareils Tailscale</h3>

                    }                        <div id="tailscale-devices">

                },                            <div class="loading">üîÑ Chargement des appareils Tailscale...</div>

                                        </div>

                async loadDevices() {                    </div>

                    try {                </div>

                        const res = await fetch('/api/hub/devices');

                        const data = await res.json();                <!-- Routes - section repliable/d√©pliable -->

                        this.devices = data.devices || [];                <div class="devices-container">

                        console.log('üì± Devices loaded:', this.devices.length);                    <div class="card">

                    } catch (err) {                        <h3>üõ£Ô∏è Routes Subnet <button class="btn btn-small" onclick="app.toggleSection('routes-section')">üëÅÔ∏è</button></h3>

                        console.error('‚ùå Devices:', err);                        <div id="routes-section" style="display: none;">

                    }                            <p>Configuration des routes pour acc√©der aux r√©seaux locaux via Tailscale.</p>

                },                            <div id="tailscale-routes">

                                                <div class="loading">üîÑ Chargement des routes...</div>

                async addDevice(ip) {                            </div>

                    try {                        </div>

                        await fetch('/api/devices', {                    </div>

                            method: 'POST',                </div>

                            headers: {'Content-Type': 'application/json'},

                            body: JSON.stringify({ip, managed: true})                <!-- ACL - section repliable/d√©pliable -->

                        });                <div class="devices-container">

                        await this.loadDevices();                    <div class="card">

                    } catch (err) {                        <h3>üõ°Ô∏è Contr√¥le d'Acc√®s (ACL) <button class="btn btn-small" onclick="app.toggleSection('acl-section')">üëÅÔ∏è</button></h3>

                        alert('Erreur: ' + err.message);                        <div id="acl-section" style="display: none;">

                    }                            <p>R√®gles de s√©curit√© et politique d'acc√®s du r√©seau Tailscale.</p>

                },                            <div id="tailscale-acl">

                                                <div class="loading">üîÑ Chargement des r√®gles...</div>

                async removeDevice(ip) {                            </div>

                    if (!confirm(`Retirer ${ip} ?`)) return;                        </div>

                    try {                    </div>

                        await fetch(`/api/devices/${ip}`, {method: 'DELETE'});                </div>

                        await this.loadDevices();            </div>

                    } catch (err) {

                        alert('Erreur: ' + err.message);            <!-- Tab Test -->

                    }            <div id="tab-test" class="tab-content">

                },                <h2>üîß Test API</h2>

                                <div class="test-container">

                async startScan() {                    <button id="test-get" class="btn">Test GET</button>

                    this.scanning = true;                    <button id="test-post" class="btn">Test POST</button>

                    try {                    <div id="test-results"></div>

                        await fetch('/api/hub/scan', {method: 'POST'});                </div>

                        await new Promise(r => setTimeout(r, 3000)); // Wait 3s            </div>

                        await this.loadDevices();        </main>

                        await this.loadStats();

                    } catch (err) {        <!-- Pied de page -->

                        alert('Erreur scan: ' + err.message);        <footer class="footer">

                    } finally {            <div class="footer-content">

                        this.scanning = false;                <span>333HOME v4.0.0 - Architecture Modulaire</span>

                    }                <span id="connection-status">üü¢ Connect√©</span>

                }            </div>

            }        </footer>

        }    </div>

    </script></body>

</body></html>
</html>
